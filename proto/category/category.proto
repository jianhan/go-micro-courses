syntax = "proto3";

package go.micro.srv.courses;
option go_package="category";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// Service declares all RPC calls for categories related functions.
service CategoryService {
	rpc UpsertCategory (UpsertCategoryReq) returns (UpsertCategoryRsp);
	rpc InsertCategories (Categories) returns (InsertCategoriesResponse);
	rpc UpdateCategories (Categories) returns (UpdateCategoriesResponse);
	rpc FindCategories (FindCategoriesRequest) returns (Categories);
	rpc DeleteCategoriesByIDs (DeleteCategoriesByIDsRequest) returns (google.protobuf.Empty);
}

message Category {
	// @inject_tag: bson:"_id" valid:"uuid,required~ID is required"
	string ID = 1;
    // @inject_tag: bson:"name" valid:"required~name is required,length(1|256)~name must be max 256 characters"
	string name = 2;
    // @inject_tag: valid:"required~Slug is required"
	string slug = 3;
	// @inject_tag: bson:"display_order"
	uint64 display_order = 4;
    // @inject_tag: valid:"required~Description is required"
	string description = 5;
	bool hidden = 6;
    // @inject_tag: bson:"created_at"
	google.protobuf.Timestamp created_at = 7;
	// @inject_tag: bson:"updated_at"
	google.protobuf.Timestamp updated_at = 8;

}

message UpsertCategoryReq {
	Category catetory = 1;
	bool is_new = 2;
}

message UpsertCategoryRsp {
	Category category = 1;
}

message Categories {
	repeated Category categories = 1;
}

message InsertCategoriesResponse {
	int64 inserted = 1;
}

message UpdateCategoriesResponse {
	int64 updated = 1;
}

message FindCategoriesRequest {
    repeated string ids = 1;
    string query = 2;
    bool hidden = 3;
    repeated string sort = 4;
    int64 per_page = 5;
    int64 current_page = 6;
}

message DeleteCategoriesByIDsRequest {
	repeated string ids = 1;
}

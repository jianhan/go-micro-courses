// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: proto/category/category.proto

/*
Package category is a generated protocol buffer package.

It is generated from these files:
	proto/category/category.proto

It has these top-level messages:
	Category
	CategorySlice
	InsertCategoriesResponse
	UpdateCategoriesResponse
	FindCategoriesRequest
	DeleteCategoriesByIDsRequest
*/
package category

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = google_protobuf1.Empty{}

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Categories service

type CategoriesClient interface {
	InsertCategories(ctx context.Context, in *CategorySlice, opts ...client.CallOption) (*InsertCategoriesResponse, error)
	UpdateCategories(ctx context.Context, in *CategorySlice, opts ...client.CallOption) (*UpdateCategoriesResponse, error)
	FindCategories(ctx context.Context, in *FindCategoriesRequest, opts ...client.CallOption) (*CategorySlice, error)
	DeleteCategoriesByIDs(ctx context.Context, in *DeleteCategoriesByIDsRequest, opts ...client.CallOption) (*google_protobuf1.Empty, error)
}

type categoriesClient struct {
	c           client.Client
	serviceName string
}

func NewCategoriesClient(serviceName string, c client.Client) CategoriesClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.courses"
	}
	return &categoriesClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *categoriesClient) InsertCategories(ctx context.Context, in *CategorySlice, opts ...client.CallOption) (*InsertCategoriesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Categories.InsertCategories", in)
	out := new(InsertCategoriesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoriesClient) UpdateCategories(ctx context.Context, in *CategorySlice, opts ...client.CallOption) (*UpdateCategoriesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Categories.UpdateCategories", in)
	out := new(UpdateCategoriesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoriesClient) FindCategories(ctx context.Context, in *FindCategoriesRequest, opts ...client.CallOption) (*CategorySlice, error) {
	req := c.c.NewRequest(c.serviceName, "Categories.FindCategories", in)
	out := new(CategorySlice)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoriesClient) DeleteCategoriesByIDs(ctx context.Context, in *DeleteCategoriesByIDsRequest, opts ...client.CallOption) (*google_protobuf1.Empty, error) {
	req := c.c.NewRequest(c.serviceName, "Categories.DeleteCategoriesByIDs", in)
	out := new(google_protobuf1.Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Categories service

type CategoriesHandler interface {
	InsertCategories(context.Context, *CategorySlice, *InsertCategoriesResponse) error
	UpdateCategories(context.Context, *CategorySlice, *UpdateCategoriesResponse) error
	FindCategories(context.Context, *FindCategoriesRequest, *CategorySlice) error
	DeleteCategoriesByIDs(context.Context, *DeleteCategoriesByIDsRequest, *google_protobuf1.Empty) error
}

func RegisterCategoriesHandler(s server.Server, hdlr CategoriesHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Categories{hdlr}, opts...))
}

type Categories struct {
	CategoriesHandler
}

func (h *Categories) InsertCategories(ctx context.Context, in *CategorySlice, out *InsertCategoriesResponse) error {
	return h.CategoriesHandler.InsertCategories(ctx, in, out)
}

func (h *Categories) UpdateCategories(ctx context.Context, in *CategorySlice, out *UpdateCategoriesResponse) error {
	return h.CategoriesHandler.UpdateCategories(ctx, in, out)
}

func (h *Categories) FindCategories(ctx context.Context, in *FindCategoriesRequest, out *CategorySlice) error {
	return h.CategoriesHandler.FindCategories(ctx, in, out)
}

func (h *Categories) DeleteCategoriesByIDs(ctx context.Context, in *DeleteCategoriesByIDsRequest, out *google_protobuf1.Empty) error {
	return h.CategoriesHandler.DeleteCategoriesByIDs(ctx, in, out)
}

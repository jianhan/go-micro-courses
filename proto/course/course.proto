syntax = "proto3";

package go.micro.srv.courses;
option go_package="course";

import "google/protobuf/timestamp.proto";
import "github.com/jianhan/pkg/proto/mysql/mysql.proto";
import "google/protobuf/empty.proto";

// Service declares all RPC calls for courses related functions.
service Courses {
	rpc InsertCourses(CourseSlice) returns (google.protobuf.Empty);
	rpc UpdateCourses(CourseSlice) returns (UpdateCoursesRsp);
    rpc FindCourses(FindCoursesRequest) returns (CourseSlice);
}

message UpdateCoursesRsp {
    int64 updated = 1;
}

message CourseSlice {
	repeated Course courses = 1;
}

message FindCoursesRequest {
    repeated string ids = 1;
    string query = 2;
    google.protobuf.Timestamp start = 3;
    google.protobuf.Timestamp end = 4;
    bool inclusive = 5;
    bool hidden = 6;
    repeated string sort = 7;
    int64 per_page = 8;
    int64 current_page = 9;
}

// Course defines data structure of Course.
message Course {
    // @inject_tag: bson:"_id" valid:"uuid,required~ID is required"
	string ID = 1;
    // @inject_tag: bson:"name" valid:"required~name is required,length(1|256)~name must be max 256 characters"
	string name = 2;
    // @inject_tag: valid:"required~Slug is required"
	string slug = 3;
	// @inject_tag: bson:"display_order"
	uint64 display_order = 4;
    // @inject_tag: valid:"required~Description is required"
	string description = 5;
	bool hidden = 6;
    // @inject_tag: valid:"required~Start date time is required"
	google.protobuf.Timestamp start = 7;
    // @inject_tag: valid:"required~End date time is required"
	google.protobuf.Timestamp end = 8;
	// @inject_tag: bson:"created_at"
	google.protobuf.Timestamp created_at = 9;
	// @inject_tag: bson:"updated_at"
	google.protobuf.Timestamp updated_at = 10;
	// @inject_tag: bson:"category_ids"
	repeated string category_ids = 11;
}


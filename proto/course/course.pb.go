// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/course/course.proto

/*
Package course is a generated protocol buffer package.

It is generated from these files:
	proto/course/course.proto

It has these top-level messages:
	UpdateCoursesRsp
	CourseSlice
	FindCoursesRequest
	Course
*/
package course

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/golang/protobuf/ptypes/empty"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UpdateCoursesRsp struct {
	Updated int64 `protobuf:"varint,1,opt,name=updated" json:"updated,omitempty"`
}

func (m *UpdateCoursesRsp) Reset()                    { *m = UpdateCoursesRsp{} }
func (m *UpdateCoursesRsp) String() string            { return proto.CompactTextString(m) }
func (*UpdateCoursesRsp) ProtoMessage()               {}
func (*UpdateCoursesRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UpdateCoursesRsp) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

type CourseSlice struct {
	Courses []*Course `protobuf:"bytes,1,rep,name=courses" json:"courses,omitempty"`
}

func (m *CourseSlice) Reset()                    { *m = CourseSlice{} }
func (m *CourseSlice) String() string            { return proto.CompactTextString(m) }
func (*CourseSlice) ProtoMessage()               {}
func (*CourseSlice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CourseSlice) GetCourses() []*Course {
	if m != nil {
		return m.Courses
	}
	return nil
}

type FindCoursesRequest struct {
	Ids         []string                   `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
	Query       string                     `protobuf:"bytes,2,opt,name=query" json:"query,omitempty"`
	Start       *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=start" json:"start,omitempty"`
	End         *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=end" json:"end,omitempty"`
	Inclusive   bool                       `protobuf:"varint,5,opt,name=inclusive" json:"inclusive,omitempty"`
	Hidden      bool                       `protobuf:"varint,6,opt,name=hidden" json:"hidden,omitempty"`
	Sort        []string                   `protobuf:"bytes,7,rep,name=sort" json:"sort,omitempty"`
	PerPage     int64                      `protobuf:"varint,8,opt,name=per_page,json=perPage" json:"per_page,omitempty"`
	CurrentPage int64                      `protobuf:"varint,9,opt,name=current_page,json=currentPage" json:"current_page,omitempty"`
}

func (m *FindCoursesRequest) Reset()                    { *m = FindCoursesRequest{} }
func (m *FindCoursesRequest) String() string            { return proto.CompactTextString(m) }
func (*FindCoursesRequest) ProtoMessage()               {}
func (*FindCoursesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FindCoursesRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *FindCoursesRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *FindCoursesRequest) GetStart() *google_protobuf.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *FindCoursesRequest) GetEnd() *google_protobuf.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *FindCoursesRequest) GetInclusive() bool {
	if m != nil {
		return m.Inclusive
	}
	return false
}

func (m *FindCoursesRequest) GetHidden() bool {
	if m != nil {
		return m.Hidden
	}
	return false
}

func (m *FindCoursesRequest) GetSort() []string {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *FindCoursesRequest) GetPerPage() int64 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

func (m *FindCoursesRequest) GetCurrentPage() int64 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

// Course defines data structure of Course.
type Course struct {
	// @inject_tag: bson:"_id" valid:"uuid,required~ID is required"
	ID string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty" bson:"_id" valid:"uuid,required~ID is required"`
	// @inject_tag: bson:"name" valid:"required~name is required,length(1|256)~name must be max 256 characters"
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty" bson:"name" valid:"required~name is required,length(1|256)~name must be max 256 characters"`
	// @inject_tag: valid:"required~Slug is required"
	Slug string `protobuf:"bytes,3,opt,name=slug" json:"slug,omitempty" valid:"required~Slug is required"`
	// @inject_tag: bson:"display_order"
	DisplayOrder uint64 `protobuf:"varint,4,opt,name=display_order,json=displayOrder" json:"display_order,omitempty" bson:"display_order"`
	// @inject_tag: valid:"required~Description is required"
	Description string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty" valid:"required~Description is required"`
	Hidden      bool   `protobuf:"varint,6,opt,name=hidden" json:"hidden,omitempty"`
	// @inject_tag: valid:"required~Start date time is required"
	Start *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=start" json:"start,omitempty" valid:"required~Start date time is required"`
	// @inject_tag: valid:"required~End date time is required"
	End *google_protobuf.Timestamp `protobuf:"bytes,8,opt,name=end" json:"end,omitempty" valid:"required~End date time is required"`
	// @inject_tag: bson:"created_at"
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty" bson:"updated_at"`
	// @inject_tag: bson:"category_ids"
	CategoryIds []string `protobuf:"bytes,11,rep,name=category_ids,json=categoryIds" json:"category_ids,omitempty" bson:"category_ids"`
}

func (m *Course) Reset()                    { *m = Course{} }
func (m *Course) String() string            { return proto.CompactTextString(m) }
func (*Course) ProtoMessage()               {}
func (*Course) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Course) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Course) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Course) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Course) GetDisplayOrder() uint64 {
	if m != nil {
		return m.DisplayOrder
	}
	return 0
}

func (m *Course) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Course) GetHidden() bool {
	if m != nil {
		return m.Hidden
	}
	return false
}

func (m *Course) GetStart() *google_protobuf.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Course) GetEnd() *google_protobuf.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Course) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Course) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Course) GetCategoryIds() []string {
	if m != nil {
		return m.CategoryIds
	}
	return nil
}

func init() {
	proto.RegisterType((*UpdateCoursesRsp)(nil), "go.micro.srv.courses.UpdateCoursesRsp")
	proto.RegisterType((*CourseSlice)(nil), "go.micro.srv.courses.CourseSlice")
	proto.RegisterType((*FindCoursesRequest)(nil), "go.micro.srv.courses.FindCoursesRequest")
	proto.RegisterType((*Course)(nil), "go.micro.srv.courses.Course")
}

func init() { proto.RegisterFile("proto/course/course.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 536 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x95, 0xe3, 0x7c, 0x79, 0xdc, 0xa0, 0x6a, 0x55, 0x55, 0x6e, 0xa8, 0x84, 0x1b, 0x24, 0xe4,
	0x43, 0xe5, 0xa0, 0x20, 0x21, 0x71, 0x2c, 0xb4, 0x48, 0xe1, 0x02, 0x32, 0x70, 0xc9, 0x25, 0x72,
	0xbd, 0x83, 0x59, 0xc9, 0xf6, 0xba, 0xbb, 0xeb, 0x4a, 0xf9, 0x11, 0xdc, 0xf9, 0x01, 0xfc, 0x50,
	0xb4, 0xbb, 0x36, 0x14, 0x12, 0x9a, 0x72, 0xf2, 0xee, 0x9b, 0x37, 0xeb, 0x99, 0x37, 0xf3, 0xe0,
	0xa4, 0x16, 0x5c, 0xf1, 0x79, 0xc6, 0x1b, 0x21, 0xb1, 0xfd, 0xc4, 0x06, 0x23, 0x47, 0x39, 0x8f,
	0x4b, 0x96, 0x09, 0x1e, 0x4b, 0x71, 0x1b, 0xdb, 0x90, 0x9c, 0x3e, 0xc9, 0x39, 0xcf, 0x0b, 0x9c,
	0x1b, 0xce, 0x75, 0xf3, 0x65, 0xae, 0x58, 0x89, 0x52, 0xa5, 0x65, 0x6d, 0xd3, 0xa6, 0x8f, 0xff,
	0x26, 0x60, 0x59, 0xab, 0x8d, 0x0d, 0xce, 0xce, 0xe1, 0xf0, 0x73, 0x4d, 0x53, 0x85, 0x6f, 0xec,
	0x73, 0x89, 0xac, 0x49, 0x00, 0xa3, 0xc6, 0x60, 0x34, 0x70, 0x42, 0x27, 0x72, 0x93, 0xee, 0x3a,
	0xbb, 0x02, 0xdf, 0xf2, 0x3e, 0x16, 0x2c, 0x43, 0xf2, 0x12, 0x46, 0x6d, 0x15, 0x81, 0x13, 0xba,
	0x91, 0xbf, 0x38, 0x8d, 0x77, 0x95, 0x18, 0xdb, 0x9c, 0xa4, 0x23, 0xcf, 0x7e, 0xf4, 0x80, 0xbc,
	0x65, 0x15, 0xed, 0xfe, 0x89, 0x37, 0x0d, 0x4a, 0x45, 0x0e, 0xc1, 0x65, 0xd4, 0x3e, 0xe5, 0x25,
	0xfa, 0x48, 0x8e, 0x60, 0x70, 0xd3, 0xa0, 0xd8, 0x04, 0xbd, 0xd0, 0x89, 0xbc, 0xc4, 0x5e, 0xc8,
	0x73, 0x18, 0x48, 0x95, 0x0a, 0x15, 0xb8, 0xa1, 0x13, 0xf9, 0x8b, 0x69, 0x6c, 0x1b, 0x8c, 0xbb,
	0x06, 0xe3, 0x4f, 0x9d, 0x02, 0x89, 0x25, 0x92, 0x73, 0x70, 0xb1, 0xa2, 0x41, 0x7f, 0x2f, 0x5f,
	0xd3, 0xc8, 0x29, 0x78, 0xac, 0xca, 0x8a, 0x46, 0xb2, 0x5b, 0x0c, 0x06, 0xa1, 0x13, 0x8d, 0x93,
	0xdf, 0x00, 0x39, 0x86, 0xe1, 0x57, 0x46, 0x29, 0x56, 0xc1, 0xd0, 0x84, 0xda, 0x1b, 0x21, 0xd0,
	0x97, 0x5c, 0xa8, 0x60, 0x64, 0xca, 0x37, 0x67, 0x72, 0x02, 0xe3, 0x1a, 0xc5, 0xba, 0x4e, 0x73,
	0x0c, 0xc6, 0x56, 0xca, 0x1a, 0xc5, 0x87, 0x34, 0x47, 0x72, 0x06, 0x07, 0x59, 0x23, 0x04, 0x56,
	0xca, 0x86, 0x3d, 0x13, 0xf6, 0x5b, 0x4c, 0x53, 0x66, 0xdf, 0x5d, 0x18, 0x5a, 0x89, 0xc8, 0x23,
	0xe8, 0x2d, 0x2f, 0xcd, 0x34, 0xbc, 0xa4, 0xb7, 0xbc, 0xd4, 0x3f, 0xab, 0xd2, 0x12, 0x5b, 0x5d,
	0xcc, 0xd9, 0x14, 0x50, 0x34, 0xb9, 0x51, 0x45, 0x17, 0x50, 0x34, 0x39, 0x79, 0x0a, 0x13, 0xca,
	0x64, 0x5d, 0xa4, 0x9b, 0x35, 0x17, 0x14, 0x85, 0x91, 0xa0, 0x9f, 0x1c, 0xb4, 0xe0, 0x7b, 0x8d,
	0x91, 0x10, 0x7c, 0x8a, 0x32, 0x13, 0xac, 0x56, 0x8c, 0x57, 0xa6, 0x63, 0x2f, 0xb9, 0x0b, 0xfd,
	0xb3, 0xe7, 0x5f, 0x93, 0x18, 0xfd, 0xe7, 0x24, 0xc6, 0x0f, 0x9b, 0xc4, 0x2b, 0x80, 0x4c, 0xa0,
	0x5e, 0xbd, 0x75, 0xaa, 0x8c, 0x44, 0xf7, 0x27, 0x79, 0x2d, 0xfb, 0x42, 0xe9, 0xd4, 0x76, 0x6b,
	0x75, 0x2a, 0xec, 0x4f, 0x6d, 0xd9, 0x17, 0xca, 0x8c, 0x26, 0x55, 0x98, 0x73, 0xb1, 0x59, 0xeb,
	0x85, 0xf4, 0xcd, 0x44, 0xfd, 0x0e, 0x5b, 0x52, 0xb9, 0xf8, 0xd6, 0x83, 0x51, 0xbb, 0xbd, 0xe4,
	0x1d, 0x4c, 0x96, 0x95, 0x44, 0xa1, 0x3a, 0xe0, 0xec, 0x3e, 0x17, 0x18, 0xe7, 0x4c, 0x8f, 0xb7,
	0x2a, 0xb9, 0xd2, 0xa6, 0x24, 0x2b, 0x98, 0xfc, 0x61, 0xc7, 0x87, 0xbc, 0xf5, 0x6c, 0x37, 0x65,
	0xcb, 0xd6, 0x2b, 0xf0, 0xef, 0x98, 0x8e, 0x44, 0xbb, 0xd3, 0xb6, 0x7d, 0x39, 0xdd, 0x5f, 0xc3,
	0xeb, 0xf1, 0x6a, 0x68, 0xe1, 0xeb, 0xa1, 0xe9, 0xe8, 0xc5, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x3e, 0xd3, 0x4e, 0xf8, 0xc8, 0x04, 0x00, 0x00,
}
